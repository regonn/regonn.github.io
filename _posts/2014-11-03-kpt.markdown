---
layout: post
title:  "同じ失敗を繰り返さないために〜振り返りを行う際に気をつけておきたい6のこと〜"
date:   2014-11-03 13:48:05
categories: 'programmer'
desc: "振り返りをする際に気をつけておきたいことをまとめました。タスクが時間内に終わらなかったという振り返り例から徐々に問題を切り分けて、本質を考えていきます"
keywords: "振り返り, KPT, プログラマ, ワークレビュー"
image: "https://blog.regonn.tokyo/images/2014-11-03-kpt.jpg"
---

<amp-img src="https://blog.regonn.tokyo/images/2014-11-03-kpt.jpg" alt="ホワイトボードをすぐ消される男性" width="670px" height="480px" layout="responsive" ></amp-img>

私が働いている株式会社ソニックガーデンでは、弟子制度というのも取り入れていて、
私は現在弟子で修行中の身です（参考：[「修行」「弟子」「関門」「脱落」の謎を解け！　精鋭部隊が集まる採用の秘密 - SonicGarden 株式会社ソニックガーデン](http://www.sonicgarden.jp/216))

プログラマとしてプログラミングスキルが大事なのは当たり前ですが、特にソニックガーデンでは振り返りに力を入れています。

[自律的に現場を改善できるチームをつくるための「ふりかえり」の進め方 〜 KPTと進め方のノウハウ - Social Change!](http://kuranuki.sonicgarden.jp/2013/05/kpt.html)

細かい単位では、日々の日報での振り返りから、師匠と一緒に週毎の振り返り、社長と副社長と一緒に行う半年毎の振り返りなんかもあったりします。

そこで、特に私が今まで振り返りをしてきて大事だと感じたところを書いていきます。

## 振り返りの悪い例
例えば次のような振り返りがあったとします。

**今日はタスクが時間内に終らなかったので、明日は時間を意識してタスクを行っていきます！**

この振り返りを例にして修正していきたいと思います。順に追っていくと理解しやすいように書いています。

## 1. トライ（次にやること）を「〜します！」で終わらせない
「~します」をトライとして次の日以降に行おうとしても、大抵の場合は明日も同じように過ごし繰り返すことになります、
**意識するだけでは何も変わりません。トライは具体的にして、少しでも工夫をしていきます。**例えば今回の悪い例を直すとすると、

**明日は実際に時間を計測して、どこに時間が多く取られているのかを確認します。**

のようにすると、具体的に行動としてトライ（次にやること）に落とせました。
**昨日とは少しでもいいから違うことをやってみる、「トライなのだから、また失敗して仕方ない」** そういう姿勢でいくと、改善するかもしれません。

## 2. 失敗原因はとことん追求（だけど責めないで）
最近読んだマッキンゼーの本 [マッキンゼー流入社1年目問題解決の教科書](http://amzn.to/2bGdcFO) でも、この話題について書いてありました。常にイシュー（問題）は何かを考えてバリュー（価値）を出していくマッキンゼー。
コンサルティングのプロ達も問題を考える場合に次のことに注意しているみたいです。

> 本来の「問題解決」とは、起こった事象に対処することではなく、「なぜ、その事象が起こったのか？本当は、どうあればその事象が起きないのか？」という問題の本質まで掘り下げて解決することです。

悪い振り返り例を直すとしたら

- 今日は電話応対が多く発生して、タスクに集中できませんでした。
- お客さんから急にミーティングのアポが入り資料を作らなければいけませんでした。

になると、失敗の原因を追求できています。あと、ここで注意したいのは**失敗した事を攻めるのではなく、
とにくかく原因をあげさせること**だと思います。責められていると感じてしまっては、
今度問題が発生した時には「責められるので黙っていよう」という思考回路が出来上がる可能性もあるからです。

## 3. そもそも問題なのか？
よくある気付きとして「**実は問題ではなかった**」という話。

同じくマッキンゼーの本から引用で、

> 気をつけなければいけないのは、問題解決には「私たちが注意を向けたところが活性化してしまう」という傾向があるということです。
相手が「この部分が問題なので解決したい」と言っていても、話を聞きながらも、意識のどこかで「真の問題が別にある可能性は？」というクリティカル思考も同時に働かせることも忘れてはいけません。

ここでも悪い例から考えてみると、例えば3. で出てきた「電話応対」や「急な資料作り」といった、
どうしても対応しなければならないときに他のタスクが進まないのは仕方ないこともあります。
（電話応対を他の人にやってもらう等も対処法ですが、話が複雑になってしまうので今回は考えません）

では、どこに問題があったのか？

**急なタスクが入ったにも関わらず、先輩や周りに報告をしておらず、進捗が見える状態になっていなかったので誰も手伝えなかった**

という新たな問題がわかりました。つまり

**連絡ができていたのならば「タスクが終らなかった」は問題ではなくて**

- 進捗が見える状態になっていなかった
- 報告できる体制が整っていなかった

というのが、より根本的な問題だったということになります。

## 4. そもそもの目的を思い出す
3. では「そもそも問題なのか」を考えましたが、今度は「そもそも何を達成するためだっけ？」と考えます。
今回の悪い振り返りの例だったら、次の様に考えていきます。

「そもそも、なんでそのタスクを終わらせなきゃいけないの？」

「◯◯を行いたかったからです」

「その、目的を達成するためには、そのタスクは必要だったの？　他の方法でその目的を達成できたのではないか？」

このような考えを行うと、**しっかりと最終的な目的を自覚して、それを達成するための行動を考えていくようになり**ます。

## 5. 話に筋は通っているか？（問題が置き去りになってない？）
「これは良いトライだ！」と思っていても、
実は**「最初に考えていた問題から脱線してしまっていて、途中から別の問題について議論してしまい、そのトライを出していた」**
ということもありえます。

確かに良いトライがでてくるのは今後のことを考えても望ましいことですが、しっかりと、
**「最初に出した問題を解決できているのか？」について見直す必要があります。**

## 6. 成功したって、すぐ振り返り
今回は失敗しての振り返りでしたが、もちろん**成功した時だって次に活かせるように振り返りは必要**です。

この前、私の会社の先輩の野上さんがクックパッド主催の24時間内でアプリを作るコンテストで2冠を達成しました。
([Facebook記事](https://www.facebook.com/SonicGarden.Japan/posts/741268572575159))

そして、その結果が出た次の日には、野上さんと一緒に受賞したデザイナーの人と振り返りを行なっていました。さすがだなと思いました（小並感）。

## 最後に
私が弟子という立場から師匠クラスへと上がるためには、**自分自身で常に振り返る習慣ができていること**なのだと思います。
振り返りの際には以上のことに気をつけながら今後も成長していきたいです。

※2014/11/04　更新：記事中の3. が抜けてました。話の順序の関係で5. を新しく追加しました。
